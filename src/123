var database = require(__dirname + '/models/database.js');
var user = require(__dirname + '/models/users.js');
var snakeScore = require(__dirname + '/models/snakescore.js');
var friend = require(__dirname + '/models/friend.js');
var banned = require(__dirname + '/models/ban.js');

database.sync();

var clients = {
    '0_0': {}
};

function loginRequest(socket, msg) {
    user.findOne({where: {
        username: msg.username,
        password: msg.password
    }}).then(function(player) {
        if (player && !player.banned && !(player.username in clients)) {
            socket.handshake.session.username = player.username;
            var zone = player.sectionX + '_' + player.sectionY;
            socket.handshake.session.zone = zone;
            client[zone][player.username] = {
                record: player,
                direction: null,
                socketID: socket.id
            };
            socket.join(zone);
            // emit player addition to everyone else
            socket.emit('loginResponse', true);
        }
        else
            socket.emit('loginResponse', false);
    });
}

function registerRequest(socket, msg) {
    if (/^[a-z0-9_]+$/i.test(msg.username)) {
        banned.findOne({where : {username: msg.username}})
        .then(function(bannedName) {
            if (!banned) {
                user.findOne({where: {username: msg.username}})
                .then(function(player) {
                    if (!player) {
                        user.create({
                            username: msg.username,
                            password: msg.password,
                            color   : msg.color,
                            shape   : msg.shape,
                            sectionX: 0,
                            sectionY: 0,
                            posX    : 0,
                            posY    : 0,
                            admin   : false,
                            banned  : false
                        }).then(function(newPlayer) {
                            socket.handshake.session.username = newPlayer.username;
                            var zone = newPlayer.sectionX + '_' + newPlayer.sectionY;
                            socket.handshake.session.zone = zone;
                            clients[zone][newPlayer.username] = {
                                record: newPlayer,
                                direction: null,
                                socketID: socket.id
                            };
                            socket.join(zone);
                            // emit player addition
                            socket.emit('registerResponse', true);
                        });
                    }
                    else
                        socket.emit('registerResponse', false);
                });
            }
            else
                socket.emit('registerResponse', false);
        });
    }
    else
        socket.emit('registerResponse', false);
}

function newClient(socket) {
    globalAddition(socket);
    zoneAddition(socket);
    friendAddition(socket);
}

function globalAddition(socket) {
    socket.broadcast.emit('globalAddition', socket.handshake.session.username);
}

function zoneAddition(socket) {
    var name = socket.handshake.session.username;
    var zone = socket.handshake.session.zone;
    socket.broadcast.to(zone).emit('zoneAddition', clients[zone][name].record.asArray());
}

function friendAddition(socket) {
    friend.findAll({where: {username: socket.handshake.session.username}})
    .then(function(friendships) {
        friendships.forEach(function(friendship) {
            for (var zone in clients) {
                if (friendship.friend in clients[zone]) {
                    friend.findOne({where: {
                        username: friendship.friend,
                        friend: friendship.username
                    }}).then(function(mutual) {
                        if (mutual) {
                            socket.broadcast.to(clients[zone][mutual.username].socketID).emit('friendAddition', mutual.friend);
                            socket.emit('friendAddition', mutual.username);
                        }
                    });
                }
            }
        });
    });
}